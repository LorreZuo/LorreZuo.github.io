<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lorrezuo.github.io/</id>
    <title>LorreZuo</title>
    <updated>2020-02-25T08:57:05.193Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://lorrezuo.github.io/"/>
    <link rel="self" href="https://lorrezuo.github.io/atom.xml"/>
    <subtitle>&amp;emsp; &amp;emsp; &amp;emsp; 的秘密小基地</subtitle>
    <logo>https://lorrezuo.github.io/images/avatar.png</logo>
    <icon>https://lorrezuo.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, LorreZuo</rights>
    <entry>
        <title type="html"><![CDATA[Alpine安装和介绍]]></title>
        <id>https://lorrezuo.github.io/post/alpine-an-zhuang-he-jie-shao</id>
        <link href="https://lorrezuo.github.io/post/alpine-an-zhuang-he-jie-shao">
        </link>
        <updated>2020-02-25T04:00:08.000Z</updated>
        <content type="html"><![CDATA[<h1 id="alpine使用日记">alpine使用日记</h1>
<p>下载alipine 镜像文件<br>
<a href="https://www.alpinelinux.org/downloads/">官网</a></p>
<table>
<thead>
<tr>
<th>类型</th>
<th>特点</th>
</tr>
</thead>
<tbody>
<tr>
<td>standard</td>
<td>标准</td>
</tr>
<tr>
<td>Extended</td>
<td>拓展，适用于服务器和路由器</td>
</tr>
<tr>
<td>NETBOOT</td>
<td>适用于网络开启</td>
</tr>
<tr>
<td>最小根文件系统</td>
<td>用于容器和最小chroots</td>
</tr>
<tr>
<td>虚拟化</td>
<td>瘦下来的内核，针对虚拟化系统进行了优化</td>
</tr>
<tr>
<td>XEN</td>
<td>支持XEN hypervisor</td>
</tr>
<tr>
<td>RASPBERRY PI</td>
<td>包括RASPBERRY内核</td>
</tr>
<tr>
<td>ARM版本</td>
<td>包括uroot引导程序 支持armhf和aarch64</td>
</tr>
</tbody>
</table>
<h2 id="setup-alpine-进入到交互式安装模式">setup-alpine 进入到交互式安装模式</h2>
<p>开机后登陆root账号，默认无密码<br>
<strong>很重要，挂载之后，需要用该命令进行在硬盘上安装</strong><br>
镜像站21是清华镜像站，38是上海交通大学镜像站<br>
键盘选择us-&gt;us，<br>
根据情况选择ip，dns，hostname等<br>
然后是去选择Asia-&gt;Shanghai<br>
安装openssh和NTP的client端<br>
<strong>然后重点，选择分区安装，看硬盘挂在情况，默认sda，一定要选很重要</strong><br>
然后键入<strong>sys</strong>进入硬盘安装，直至看到installation is complete，随后可以reboot，去掉CD/DVD(IDE)挂载。</p>
<h2 id="apk包管理">apk包管理</h2>
<p>alpine使用apk进行包管理，自动解决依赖关系</p>
<pre><code>apk update
//更新索引
</code></pre>
<p>update命令会从各个镜像源列表下载APKINDEX.tar.gz并存储到本地缓存，一般在/var/cache/apk/(Alpine在该目录下)、 /var/lib/apk/ 、/etc/apk/cache/下</p>
<pre><code>apk add [packagename]
//下载软件包，可选项
//--no-cache 不缓存
//--repository 指定仓库
//--allow-untrusted 接受不受信的软件包
</code></pre>
<h3 id="官方镜像列表">官方镜像列表：</h3>
<pre><code>官方镜像列表：http://rsync.alpinelinux.org/alpine/MIRRORS.txt镜像源配置
</code></pre>
<p>可以安装指定版本</p>
<pre><code>apk add openssh=8.1_p1-r0
apk add 'openssh&lt;8.1'
apk add 'openssh&gt;8.0'
//可以使用大于 等于 小于
</code></pre>
<p>移除软件，不是remove</p>
<pre><code>apk del openssh
//删除openssh
</code></pre>
<p>更新已安装的软件包</p>
<pre><code>apk upgrade
//更新软件和内核
apk add --upgrade openssh
//也可以单独更新指定软件
</code></pre>
<p>搜索软件包，支持通配符</p>
<pre><code>apk search [packagename]
//搜索软件包
apk search -v [packagename]
//搜索的同时查看描述
</code></pre>
<p>查看已经安装的软件包</p>
<pre><code>apk info
//查看已经安装的软包
apk info -a openssh
//列出完整端openssh的软件包信息
apk info --who-owns /sbin/ifup
//查询这个进程是哪个软件包安装的
</code></pre>
<h3 id="ssh服务注意事项">ssh服务注意事项</h3>
<p>默认ssh不开启root登陆</p>
<p>vi /etc/ssh/sshd_config找到#PermitRootLogin 更改为yes</p>
<pre><code>sed -i &quot;s/#PermitRootLogin.*/PermitRootLogin yes/g&quot; /etc/ssh/sshd_config
</code></pre>
<h2 id="管理init系统">管理init系统</h2>
<p>alpine通过OpenRCinit系统管理init</p>
<pre><code>rc-update add docker [boot]
//开机启动docker [boot等级]
</code></pre>
<pre><code>rc-status docker
//查看运行等级
</code></pre>
<pre><code>rc-service docker start|stop|restart
//服务管理，启动服务，停止服务，重启服务
</code></pre>
<p>alpine的运行等级</p>
<ul>
<li>default</li>
<li>sysinit</li>
<li>boot</li>
<li>single</li>
<li>reboot</li>
<li>shutdown</li>
</ul>
<h2 id="alpine-设置ip">Alpine 设置IP</h2>
<p><code>/etc/network/interfaces</code>是配置文件，重启网络服务是<code>/etc/init.d/networking restart</code>或<code>rc-service networking restart</code></p>
<p>更改配置文件</p>
<pre><code>vi /etc/network/interfaces
auto lo
iface lo inet loopback

auto eth0
iface eth0 net static 
    address 172.16.0.1
    netmask 255.255.255.0
    gateway 172.16.0.254
auto eth1
iface eth1 net dhcp
    hostname demo
</code></pre>
<h3 id="开启ipv6支持">开启IPv6支持</h3>
<pre><code>modprobe
//模块加载
echo &quot;ipv6&quot; &gt;&gt;/etc/modules
</code></pre>
<h3 id="开启ipv6很重要">开启ipv6很重要</h3>
<p>如果是自动获取的地址，记得开启RA 路由通告。</p>
<pre><code>iface ethx inet manual
pre-up echo 1 &gt; /proc/sys/net/ipv6/conf/ethx/accept_ra
//在网卡开启前，开启RA路由通告（自动获取）
</code></pre>
<p>配置固定IPv6地址</p>
<pre><code>iface ethx inet static
    address 2001::2
    netmask /64
    gateway 2001::1
    pre-up echo 0 &gt; /proc/sys/net/ipv6/ethx/accept_ra
</code></pre>
<p>debian系统，pre-up</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>pre-up</td>
<td>在网卡开启前的动作</td>
</tr>
<tr>
<td>up</td>
<td>启动时的动作</td>
</tr>
<tr>
<td>post-up</td>
<td>启动后的动作</td>
</tr>
<tr>
<td>pre-down</td>
<td>启动前的动作</td>
</tr>
<tr>
<td>down</td>
<td>启动时的动作</td>
</tr>
<tr>
<td>post-down</td>
<td>启动后的动作</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2020冲鸭]]></title>
        <id>https://lorrezuo.github.io/post/2020-chong-ya</id>
        <link href="https://lorrezuo.github.io/post/2020-chong-ya">
        </link>
        <updated>2020-01-14T06:03:58.000Z</updated>
        <content type="html"><![CDATA[<h5 id="flag">FLAG</h5>
<p>2020给自己立几个FLAG，巩固自己技能，做培训课程，写博客。</p>
]]></content>
    </entry>
</feed>